# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import messenger_pb2 as messenger__pb2


class MessengerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.initialize_client = channel.unary_unary(
                '/messenger.Messenger/initialize_client',
                request_serializer=messenger__pb2.Empty.SerializeToString,
                response_deserializer=messenger__pb2.InitializeResponse.FromString,
                )
        self.send_message = channel.unary_unary(
                '/messenger.Messenger/send_message',
                request_serializer=messenger__pb2.Message.SerializeToString,
                response_deserializer=messenger__pb2.Empty.FromString,
                )
        self.poll_message = channel.unary_stream(
                '/messenger.Messenger/poll_message',
                request_serializer=messenger__pb2.User.SerializeToString,
                response_deserializer=messenger__pb2.Message.FromString,
                )
        self.join_chatroom = channel.unary_unary(
                '/messenger.Messenger/join_chatroom',
                request_serializer=messenger__pb2.JoinChatroomRequest.SerializeToString,
                response_deserializer=messenger__pb2.JoinChatroomResponse.FromString,
                )
        self.leave_chatroom = channel.unary_unary(
                '/messenger.Messenger/leave_chatroom',
                request_serializer=messenger__pb2.LeaveChatroomRequest.SerializeToString,
                response_deserializer=messenger__pb2.Empty.FromString,
                )
        self.create_chatroom = channel.unary_unary(
                '/messenger.Messenger/create_chatroom',
                request_serializer=messenger__pb2.CreateChatroomRequest.SerializeToString,
                response_deserializer=messenger__pb2.Chatroom.FromString,
                )
        self.get_chatrooms = channel.unary_unary(
                '/messenger.Messenger/get_chatrooms',
                request_serializer=messenger__pb2.Empty.SerializeToString,
                response_deserializer=messenger__pb2.ChatroomList.FromString,
                )


class MessengerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def initialize_client(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_message(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def poll_message(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def join_chatroom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def leave_chatroom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create_chatroom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_chatrooms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessengerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'initialize_client': grpc.unary_unary_rpc_method_handler(
                    servicer.initialize_client,
                    request_deserializer=messenger__pb2.Empty.FromString,
                    response_serializer=messenger__pb2.InitializeResponse.SerializeToString,
            ),
            'send_message': grpc.unary_unary_rpc_method_handler(
                    servicer.send_message,
                    request_deserializer=messenger__pb2.Message.FromString,
                    response_serializer=messenger__pb2.Empty.SerializeToString,
            ),
            'poll_message': grpc.unary_stream_rpc_method_handler(
                    servicer.poll_message,
                    request_deserializer=messenger__pb2.User.FromString,
                    response_serializer=messenger__pb2.Message.SerializeToString,
            ),
            'join_chatroom': grpc.unary_unary_rpc_method_handler(
                    servicer.join_chatroom,
                    request_deserializer=messenger__pb2.JoinChatroomRequest.FromString,
                    response_serializer=messenger__pb2.JoinChatroomResponse.SerializeToString,
            ),
            'leave_chatroom': grpc.unary_unary_rpc_method_handler(
                    servicer.leave_chatroom,
                    request_deserializer=messenger__pb2.LeaveChatroomRequest.FromString,
                    response_serializer=messenger__pb2.Empty.SerializeToString,
            ),
            'create_chatroom': grpc.unary_unary_rpc_method_handler(
                    servicer.create_chatroom,
                    request_deserializer=messenger__pb2.CreateChatroomRequest.FromString,
                    response_serializer=messenger__pb2.Chatroom.SerializeToString,
            ),
            'get_chatrooms': grpc.unary_unary_rpc_method_handler(
                    servicer.get_chatrooms,
                    request_deserializer=messenger__pb2.Empty.FromString,
                    response_serializer=messenger__pb2.ChatroomList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'messenger.Messenger', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Messenger(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def initialize_client(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messenger.Messenger/initialize_client',
            messenger__pb2.Empty.SerializeToString,
            messenger__pb2.InitializeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_message(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messenger.Messenger/send_message',
            messenger__pb2.Message.SerializeToString,
            messenger__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def poll_message(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/messenger.Messenger/poll_message',
            messenger__pb2.User.SerializeToString,
            messenger__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def join_chatroom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messenger.Messenger/join_chatroom',
            messenger__pb2.JoinChatroomRequest.SerializeToString,
            messenger__pb2.JoinChatroomResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def leave_chatroom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messenger.Messenger/leave_chatroom',
            messenger__pb2.LeaveChatroomRequest.SerializeToString,
            messenger__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create_chatroom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messenger.Messenger/create_chatroom',
            messenger__pb2.CreateChatroomRequest.SerializeToString,
            messenger__pb2.Chatroom.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_chatrooms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/messenger.Messenger/get_chatrooms',
            messenger__pb2.Empty.SerializeToString,
            messenger__pb2.ChatroomList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
